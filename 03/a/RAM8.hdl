// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way(in=load,sel=address,a=isSelected0,b=isSelected1,c=isSelected2,d=isSelected3,e=isSelected4,f=isSelected5,g=isSelected6,h=isSelected7);

    Register(in=in, load=isSelected0, out=outReg0);
    Register(in=in, load=isSelected1, out=outReg1);
    Register(in=in, load=isSelected2, out=outReg2);
    Register(in=in, load=isSelected3, out=outReg3);
    Register(in=in, load=isSelected4, out=outReg4);
    Register(in=in, load=isSelected5, out=outReg5);
    Register(in=in, load=isSelected6, out=outReg6);
    Register(in=in, load=isSelected7, out=outReg7);

    Mux8Way16(a=outReg0,b=outReg1,c=outReg2,d=outReg3,e=outReg4,f=outReg5,g=outReg6,h=outReg7,sel=address,out=out);
}