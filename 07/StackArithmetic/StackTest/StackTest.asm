// StackTest.vm
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
A=M-1
D=M
A=A-1
D=M-D
@STACKTESTSTACKTEST_22_POSITIVE
D;JEQ
D=0
@STACKTESTSTACKTEST_22_END
0;JMP
(STACKTESTSTACKTEST_22_POSITIVE)
D=-1
(STACKTESTSTACKTEST_22_END)
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
A=M-1
D=M
A=A-1
D=M-D
@STACKTESTSTACKTEST_58_POSITIVE
D;JEQ
D=0
@STACKTESTSTACKTEST_58_END
0;JMP
(STACKTESTSTACKTEST_58_POSITIVE)
D=-1
(STACKTESTSTACKTEST_58_END)
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
A=M-1
D=M
A=A-1
D=M-D
@STACKTESTSTACKTEST_94_POSITIVE
D;JEQ
D=0
@STACKTESTSTACKTEST_94_END
0;JMP
(STACKTESTSTACKTEST_94_POSITIVE)
D=-1
(STACKTESTSTACKTEST_94_END)
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
A=M-1
D=M
A=A-1
D=M-D
@STACKTESTSTACKTEST_130_POSITIVE
D;JLT
D=0
@STACKTESTSTACKTEST_130_END
0;JMP
(STACKTESTSTACKTEST_130_POSITIVE)
D=-1
(STACKTESTSTACKTEST_130_END)
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
A=M-1
D=M
A=A-1
D=M-D
@STACKTESTSTACKTEST_166_POSITIVE
D;JLT
D=0
@STACKTESTSTACKTEST_166_END
0;JMP
(STACKTESTSTACKTEST_166_POSITIVE)
D=-1
(STACKTESTSTACKTEST_166_END)
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
A=M-1
D=M
A=A-1
D=M-D
@STACKTESTSTACKTEST_202_POSITIVE
D;JLT
D=0
@STACKTESTSTACKTEST_202_END
0;JMP
(STACKTESTSTACKTEST_202_POSITIVE)
D=-1
(STACKTESTSTACKTEST_202_END)
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@STACKTESTSTACKTEST_238_POSITIVE
D;JGT
D=0
@STACKTESTSTACKTEST_238_END
0;JMP
(STACKTESTSTACKTEST_238_POSITIVE)
D=-1
(STACKTESTSTACKTEST_238_END)
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@STACKTESTSTACKTEST_274_POSITIVE
D;JGT
D=0
@STACKTESTSTACKTEST_274_END
0;JMP
(STACKTESTSTACKTEST_274_POSITIVE)
D=-1
(STACKTESTSTACKTEST_274_END)
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@STACKTESTSTACKTEST_310_POSITIVE
D;JGT
D=0
@STACKTESTSTACKTEST_310_END
0;JMP
(STACKTESTSTACKTEST_310_POSITIVE)
D=-1
(STACKTESTSTACKTEST_310_END)
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
// push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
A=M-1
D=M
A=A-1
M=M+D
D=A+1
@SP
M=D
// push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M-1
D=M
A=A-1
M=M-D
D=A+1
@SP
M=D
// neg
@SP
A=M-1
M=-M
// and
@SP
A=M-1
D=M
A=A-1
M=M&D
D=A+1
@SP
M=D
// push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
A=M-1
D=M
A=A-1
M=M|D
D=A+1
@SP
M=D
// not
@SP
A=M-1
M=!M
